# AI Car Repair Assistant Web Application Dependencies
# 
# This file contains all the Python package dependencies required to run
# the AI Car Repair Assistant web application successfully.
#
# Installation:
#   pip install -r requirements-agentrepair.txt
#
# Python Version: 3.8 or higher recommended
# Last Updated: August 25, 2025
# Current Implementation: OpenAI GPT-4o-mini

# ============================================================================
# CORE DEPENDENCIES (Required)
# ============================================================================

# Flask web framework - Main web application framework
Flask>=3.0.0
    # Flask is the core web framework that provides:
    # - HTTP request/response handling
    # - Template rendering (Jinja2)
    # - Session management
    # - Static file serving
    # - URL routing and view functions

# OpenAI Python SDK - Core AI integration (REQUIRED)
openai>=1.0.0
    # OpenAI Python library provides:
    # - Chat completions API access (GPT-4o-mini)
    # - GPT model integration and management
    # - Token usage tracking and cost optimization
    # - Built-in rate limiting and error handling
    # - Streaming responses and conversation management
    # - Authentication and API key management

# ============================================================================
# FLASK ECOSYSTEM DEPENDENCIES
# ============================================================================
# These are typically installed automatically with Flask but listed explicitly
# for version control and security updates

Werkzeug>=3.0.0
    # WSGI utility library that provides:
    # - HTTP utilities and data structures
    # - Development server
    # - Debug tools and error handling

Jinja2>=3.1.0
    # Template engine that provides:
    # - HTML template rendering
    # - Template inheritance and macros
    # - Automatic escaping for security

MarkupSafe>=2.1.0
    # String handling library that provides:
    # - Safe string markup for templates
    # - HTML escaping functions
    # - XSS protection utilities

itsdangerous>=2.1.0
    # Cryptographic signing library that provides:
    # - Session data signing
    # - CSRF token generation
    # - Secure cookie handling

click>=8.1.0
    # Command line interface library that provides:
    # - Flask CLI commands
    # - Application management tools
    # - Custom command creation

# ============================================================================
# HTTP CLIENT DEPENDENCIES
# ============================================================================

requests>=2.31.0
    # HTTP library for making API requests
    # - Used by OpenAI SDK for API calls
    # - SSL/TLS support
    # - Connection pooling and retry logic

urllib3>=2.0.0
    # HTTP library used by requests
    # - Connection pooling
    # - SSL/TLS verification
    # - Request/response handling

# ============================================================================
# OPTIONAL DEPENDENCIES
# ============================================================================

# Environment variable management (RECOMMENDED)
python-dotenv>=1.0.0
    # Provides .env file support for:
    # - Local development configuration
    # - Environment variable loading
    # - Configuration management
    # Note: Application works without this but requires manual env var setup

# Data handling and validation (OPTIONAL)
pydantic>=2.0.0
    # Data validation library that provides:
    # - Input validation and parsing
    # - Type hints and data models
    # - JSON serialization/deserialization
    # Note: Useful for request/response validation

# ============================================================================
# DEVELOPMENT DEPENDENCIES (Optional - for development only)
# ============================================================================

# Uncomment these if you want development tools:
# pytest>=7.0.0         # Testing framework
# black>=23.0.0          # Code formatter
# flake8>=6.0.0          # Linting tool
# mypy>=1.0.0            # Type checking

# ============================================================================
# CURRENT IMPLEMENTATION NOTES
# ============================================================================
# This application uses OpenAI GPT-4o-mini model for cost-effective AI responses
# Dependencies are optimized for direct OpenAI API integration
# No Azure dependencies required for current implementation